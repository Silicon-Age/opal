<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
	<!-- As far as I (Jonah) know, the most relevant Maven commands for this project are `mvn compile` (exactly what it sounds like), `mvn package` (build the executable jar), and `mvn source:jar` (build the source jar used to create Javadoc). -->
	
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.opal</groupId>
	<artifactId>opal</artifactId>
	<version>2.0.0</version>
	
	<properties>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<maven.compiler.release>21</maven.compiler.release>
	</properties>
	
	<repositories>
		<!-- jitpack.io is a service that compiles GitHub projects into artifacts (based on tagged releases)
		"on the fly" so they can be referenced by Maven (and maybe Gradle).  In the medium term, we may return
		to using this for the siliconage artifact, but we are not currently.
		-->
		<!--
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
		-->
	</repositories>
	
	<dependencies>
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<version>5.0.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>4.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.5</version>
		</dependency>
		
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.17.1</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.9.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>2.0.16</version>
		</dependency><!-- No logging implementation is provided because the Opal library contains minimal code that can meaningfully be executed on its own, and that code would always be executed in the context of another project. -->
		
		<!-- Restore if we go back to fetching this artifact through jitpack -->
		<!--
		<dependency>
			<groupId>com.github.Silicon-Age</groupId>
			<artifactId>siliconage</artifactId>
			<version>1.0.1</version>
		</dependency>
		-->
		
		<!-- This needs to be updated manually -->
		<dependency>
			<groupId>com.siliconage</groupId>
			<artifactId>siliconage</artifactId>
			<version>1.1.0</version><!-- I think this doesn't matter -JHG -->
			<scope>system</scope>
			<systemPath>${project.basedir}/lib/siliconage.jar</systemPath>
		</dependency>
	</dependencies>
</project>
